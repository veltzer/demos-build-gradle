
/*
	First way to define a task: tasks.register
	the parameter is a global variable which is accessed via the closure mechanism
*/

def something = "what to say1"
tasks.register('say1') {
    description "say1 description"
    doLast {
        println "here it is -> ${something}"
    }
}

/*
	Second way to define a task: task creator pattern with task.register
*/
def create_my_task(what_to_say) {
	tasks.register('say2') {
	    description "say2 description"
	    doLast {
		println "here it is -> ${what_to_say}"
	    }
	}
}
create_my_task "what to say2"

/*
	Third way to to define a task: task pattern
*/
def what_to_say3 = "what to say3"
task say3() {
    description "say3 description"
    doLast {
        println "here it is -> ${what_to_say3}"
    }
}

/*
	Fourth way to to define a task: class task
*/
class Say4 extends DefaultTask {
    String description = "say4 description"
    @Input
    String what_to_say = 'what to say4'
    @TaskAction
    def greet() {
        println "here it is -> ${what_to_say}"
    }
}
task say4(type: Say4)
